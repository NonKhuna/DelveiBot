import pymongo,random,time
from pymongo import MongoClient
from DialogflowPro import * 
from Template import * 
# import linetest
cluster =MongoClient("localhost",27017)
db=cluster["admin"]
Maxdata = 1100
dbFlow1='Money_list_1'
dbFlow2='Money_list_2'
def checkTel(tel) :
    # print(type(tel))
    if len(tel) ==1 :
        # print(type(tel[0]))
        if len(tel[0]) ==10 :
            if tel[0][0] !='0' :
                return [-1,'‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏öüò§ ‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà 0 ‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤']
            else :
                return tel[0]
        else :
            return [-1,"‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏öüò§"]
    if len(tel) == 3 :
        print(tel[0])
        print(tel[1])
        print(tel[2])
        if len(tel[0]) ==2 and len(tel[1]) ==4  and len(tel[2]) ==4:
            if tel[0][0] != '0' :
                return [-1,'‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏öüò§ ‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà 0 ‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤']
            else : 
                return  tel[0]+tel[1]+tel[2]
        else :
            return [-1,'‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö 0X-XXX-XXXX ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']


def Find_IDX(name,iput,UserId) :
    tmp=r'projects/delveibot-ver-4-gxfftn/agent/sessions/'+UserId+r'/contexts/' + name
    idx=0
    c=0
    for i in iput['queryResult']['outputContexts'] :
        if i['name']== tmp :
            c=1
            break
        idx+=1
    return [idx,c]

def MongoProcess(iput,UserId,cnt):
    
    intent=iput['queryResult']['intent']['displayName']
    listItem=[]
    if intent=='Cancel' :
        return ['Cancel',iput]       
    print("intent : {}".format(intent))
    # print("iput : {}".format(iput))
    
    if intent in ['Flow1-what item','Flow1-with item'] :
        da=Find_IDX('lost_item-followup',iput,UserId)
        if da[1] :
            item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
            if item == '‡πÄ‡∏á‡∏¥‡∏ô' :
                tex=['‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö?','‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö','‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö?','‡∏´‡∏≤‡∏¢‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö']
                listItem.append(random.choice(tex))
                return [-1,listItem]
            else :
                listItem.append(item+'‡∏™‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö?')
                # listItem.append('‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏°‡∏≤‡∏Å‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏á‡πà‡∏≤‡∏¢‡πÜ‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡πâ‡∏° ‡πÅ‡∏î‡∏á ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß ‡∏î‡∏≥ ')
                return ["Mapcolour",listItem]
        else :
            print("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ context")

    if  intent in ['Flow1-where','flow1-item-place-money'] :
        da=Find_IDX('lost_item-followup',iput,UserId)
        if da[1] :
            item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            if item == '‡πÄ‡∏á‡∏¥‡∏ô' :
                place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                number=iput['queryResult']['outputContexts'][da[0]]['parameters']['number']
                check=db[dbFlow2].count({'item' : item,"number":number,"state" : 0})
                if check == 0 :
                    if place=="Un" :
                            tex=['‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö ,‡∏≠‡πã‡∏≠ ‡∏à‡∏≥‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']
                            listItem.append(random.choice(tex))
                    else :
                        listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
                    return ['Report_Lost_money',str(number),listItem[0]]
                else :
                    check2=db[dbFlow2].count({'item' : item,"number":number,'place':place, "state" : 0})
                    if check2==0 :
                        data=db[dbFlow2].find({'item' : item,"number":number, "state" : 0})
                        return ['show',data,'‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏à‡∏≠‡πÄ‡∏á‡∏¥‡∏ô '+str(number)+'‡∏ô‡∏∞ ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏à‡∏≠‡∏ó‡∏µ‡πà'+place]
                    else :
                        data=db[dbFlow2].find({"number":number,'place':place, "state" : 0}) 
                        # db[dbFlow2].update_one({"number":number,'place':place, "state" : 0},{ '$set' :{"state" : 1}})
                        return ['show',data,'‡∏°‡∏µ‡∏Ñ‡∏ô‡∏ô‡∏≥‡∏°‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ï‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏ô‡∏∞']
            else :
                brand=iput['queryResult']['outputContexts'][da[0]]['parameters']['brand']
                colour=iput['queryResult']['outputContexts'][da[0]]['parameters']['colour']
                place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                check=check=db[dbFlow2].count({'item' : item,"state" : 0})
                if check ==0 :
                    # print("in")
                    return ['donthave','‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏°‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡πá‡∏ö'+item+'‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']
                else :
                    if colour !='‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ' or colour !='‡πÑ‡∏°‡πà‡∏°‡∏µ':
                        check2=db[dbFlow2].count({'item' : item,'colour' : colour ,"state" : 0})
                        if check2 !=0 :
                            return ["donthave",'‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏°‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡πá‡∏ö'+item+colour+'‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']
                    elif brand !='‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ' or brand !='‡πÑ‡∏°‡πà‡∏°‡∏µ' :
                        check2=db[dbFlow2].find({'item' : item,'brand' : brand ,"state" : 0})
                        return ["have_f1",item,brand]
                    
                        
                
        else :
            print("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ context")

    if intent == 'Flow1- imageurl' :
        return 'ReportYN_yes'
    if intent == 'Flow1-where-yes' :
        da=Find_IDX('lost_item-followup',iput,UserId)
        if da[1] :
            item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            if item== '‡πÄ‡∏á‡∏¥‡∏ô' :
                return 'ReportYN_yes'
            else :
                tex=['‡∏ú‡∏°‡∏Ç‡∏≠‡∏£‡∏π‡∏õ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö','‡∏ú‡∏°‡∏Ç‡∏≠‡∏£‡∏π‡∏õ‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']
                return ['get-image',random.choice(tex)]

    if intent in ['Flow1-where-no','Flow2-where-no'] :
        return ['Finish',2]

    if intent in ['Flow1-how much'] :
        # listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
        da=Find_IDX('lost_item-followup',iput,UserId)
        if 'fin' in iput['queryResult']['outputContexts'][da[0]]['parameters'] :
            tex=['‡∏´‡∏≤‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ñ‡∏ß‡πÑ‡∏´‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö','‡∏à‡∏≥‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ß‡πà‡∏≤‡∏´‡∏≤‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ñ‡∏ß‡πÑ‡∏´‡∏ô?','‡∏´‡∏≤‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ñ‡∏ß‡πÑ‡∏´‡∏ô‡∏´‡∏£‡∏≠‡∏Ñ‡∏£‡∏±‡∏ö ?']
            listItem.append(random.choice(tex))
            return ["Map",listItem]
        else : 
            return [-1,random.choice(['‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏î‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?','‡πÄ‡∏ä‡πá‡∏Ñ‡∏î‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?'])]
    
    if intent == 'Flow1-how much - yes' :
        listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
        listItem.append(iput['queryResult']['fulfillmentMessages'][1]['text']['text'][0])
        return ["Map",listItem]

    if intent == 'Flow1-colour' :
        da=Find_IDX('lost_item-followup',iput,UserId)
        if da[1] :
            colour=iput['queryResult']['outputContexts'][da[0]]['parameters']['colour']
            item=iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            if colour=='‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ' :
                tex=['‡∏≠‡πà‡∏≤ ‡∏á‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö','‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö']
                listItem.append(random.choice(tex))
            else :
                tex=item+colour+'‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö'
                listItem.append(tex)
            tex=['‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö?','‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö']
            listItem.append(random.choice(tex))
            return [-1,listItem]
    
    if intent == 'Flow1-brand' :
        da=Find_IDX('lost_item-followup',iput,UserId)
        if da[1] :
            brand=iput['queryResult']['outputContexts'][da[0]]['parameters']['brand']
            item=iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            colour=iput['queryResult']['outputContexts'][da[0]]['parameters']['colour']
            if brand in ['‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ','‡πÑ‡∏°‡πà‡∏°‡∏µ'] :
                tex=['‡∏≠‡πà‡∏≤ ‡∏á‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö','‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö']
                listItem.append(random.choice(tex))
            else :
                tex=item+'‡∏Ç‡∏≠‡∏á'+brand+'‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö'
                listItem.append(tex)
                # listItem.append(tex)
            tex2='‡∏´‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô‡∏´‡∏£‡∏≠‡∏Ñ‡∏£‡∏±‡∏ö?'
            listItem.append(tex2)
            # listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
            return ["Map",listItem]
    
    if intent == 'instructive-state5-body - no - custom' :
        return ["Map",['‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö']]
    if intent == 'Flow1-tel' :
        da=Find_IDX('lost_item-followup',iput,UserId)
        if da[1] :
            item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            Retake =iput['queryResult']['outputContexts'][da[0]]['parameters']['Retake']
            tel =iput['queryResult']['outputContexts'][da[0]]['parameters']['tel']
            CC=checkTel(tel) 
            if type(CC) == list :
                return CC
            x=0
            for i in range(Maxdata) :
                Id=UserId+str(x)
                s=db[dbFlow1].count({"_id" : Id+'1'})
                if s==0 :
                    break
                x+=1
            if x==0 :
                Id=UserId+str(x)
                if item=='‡πÄ‡∏á‡∏¥‡∏ô' :
                    number=iput['queryResult']['outputContexts'][da[0]]['parameters']['number']
                    place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                    db[dbFlow1].insert_one({"_id" : Id+'1',"souce": UserId, "tel" : CC, "place" : place , "number" : number, "retake" : Retake, "state" : 0 ,'item' : item ,'url' : 'coin', 'text' : '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏≤‡∏¢ ' +str(number) +' ‡∏ö‡∏≤‡∏ó'})
                else :
                    url =iput['queryResult']['outputContexts'][da[0]]['parameters']['url']
                    brand=iput['queryResult']['outputContexts'][da[0]]['parameters']['brand']
                    colour=iput['queryResult']['outputContexts'][da[0]]['parameters']['colour']
                    place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                    db[dbFlow1].insert_one({"_id" : Id+'1',"souce": UserId, "tel" : CC, "place" : place , 'brand' :brand ,'colour':colour , "retake" : Retake, "state" : 0 ,'item' : item,'url' : url,  'text' : '‡πÅ‡∏à‡πâ‡∏á' +item +'‡∏´‡∏≤‡∏¢' })
                return ["Finish",1]
            else :
                return "Want_More_infomation?"
        else :
            print("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ context")
    if intent == 'Flow1-tel-yes' :
        da=Find_IDX('lost_item-followup',iput,UserId)
        if da[1] :
            item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            Retake =iput['queryResult']['outputContexts'][da[0]]['parameters']['Retake']
            tel =iput['queryResult']['outputContexts'][da[0]]['parameters']['tel']
            CC=checkTel(tel) 
            x=0
            for i in range(Maxdata) :
                Id=UserId+str(x)
                s=db[dbFlow1].count({"_id" : Id+'1'})
                if s==0 :
                    break
                x+=1
            print("CC :{}".format(CC)) 
            if item=='‡πÄ‡∏á‡∏¥‡∏ô' :
                    number=iput['queryResult']['outputContexts'][da[0]]['parameters']['number']
                    place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                    db[dbFlow1].insert_one({"_id" : Id+'1',"souce": UserId, "tel" : CC, "place" : place , "number" : number, "retake" : Retake, "state" : 0,'item' : item,'url' : 'coin' ,'text' : '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏≤‡∏¢ ' +str(number) +' ‡∏ö‡∏≤‡∏ó'})
            else :
                    url=iput['queryResult']['outputContexts'][da[0]]['parameters']['url']
                    brand=iput['queryResult']['outputContexts'][da[0]]['parameters']['brand']
                    colour=iput['queryResult']['outputContexts'][da[0]]['parameters']['colour']
                    place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                    db[dbFlow1].insert_one({"_id" : Id+'1',"souce": UserId, "tel" : CC, "place" : place , 'brand' :brand ,'colour':colour , "retake" : Retake, "state" : 0 ,'url' : url,'item' : item ,'text' : '‡πÅ‡∏à‡πâ‡∏á' +item +'‡∏´‡∏≤‡∏¢'})
            return ["Finish",1]
        else :
            print("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ context")

    if intent == 'Flow1-where-yes - no' :
        tex=['‡∏á‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö']
        return [-2,"jpg : <jpg-nophotoo.jpg>",[]]
    
    #////////////////////////////////////////////////////////////////Found-item////////////////////////////////////////////////////////////////////
    
    
    if intent in ['Flow2-what item','Flow2-found item'] :
        da=Find_IDX('flow2-followup',iput,UserId)
        if da[1] :
            item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
            if item == '‡πÄ‡∏á‡∏¥‡∏ô' :
                tex=['‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö','‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö','‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö?','‡πÄ‡∏à‡∏≠‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö']
                listItem.append(random.choice(tex))
                print(listItem)
                return [-1,listItem]
            else :
                listItem.append(item+'‡∏™‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö?')
                listItem.append('‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö')
                return ["Mapcolour",listItem]
        else :
            print("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ context")
    if intent in ['Flow2-how much'] :
        listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
        return ["Map",iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0]]

    if  intent in ['Flow2-where','Flow2-item colour brand'] :
        da=Find_IDX('flow2-followup',iput,UserId)
        if da[1] :
            item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            if item == '‡πÄ‡∏á‡∏¥‡∏ô' :
                place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                number=iput['queryResult']['outputContexts'][da[0]]['parameters']['number']
                check=db[dbFlow1].count({'item' : item,"number":number,"state" : 0})
                if check == 0 :
                    if place=="Un" :
                            tex=['‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö ,‡∏≠‡πã‡∏≠ ‡∏à‡∏≥‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']
                            listItem.append(random.choice(tex))
                    else :
                        listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
                    return ['Report_Found_money',str(number),listItem[0]]
                else :
                    check2=db[dbFlow1].count({'item' : item,"number":number,'place':place, "state" : 0})
                    if check2==0 :
                        data=db[dbFlow1].find({'item' : item,"number":number, "state" : 0})
                        return ['show',data]
                    else :
                        data=db[dbFlow1].find({'item' : item,"number":number,'place':place, "state" : 0}) 
                        # db[dbFlow1].update_one({"number":number,'place':place, "state" : 0},{ '$set' :{"state" : 1}})
                        return ['show',data]
            else :
                brand=iput['queryResult']['outputContexts'][da[0]]['parameters']['brand']
                colour=iput['queryResult']['outputContexts'][da[0]]['parameters']['colour']
                place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                check=db[dbFlow1].count({'item' : item,"state" : 0})
                if check ==0 :
                    # print("in")
                    return ['donthave','‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏°‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤'+item+'‡∏´‡∏≤‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']
                else :
                    if colour !='‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ' and  colour !='‡πÑ‡∏°‡πà‡∏°‡∏µ':
                        check2=db[dbFlow1].count({'item' : item,'colour' : colour ,"state" : 0})
                        if check2 ==0 :
                            data =db[dbFlow1].find({'item' : item,"state" : 0})
                            return ["show",data,'‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏°‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤'+item+colour+'‡∏´‡∏≤‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á'+item+'‡∏´‡∏≤‡∏¢']
                        else :
                            if brand!='‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ' and brand !='‡πÑ‡∏°‡πà‡∏°‡∏µ' :
                                check3=db[dbFlow1].count({'item' : item,'colour' : colour ,'brand' : brand,"state" : 0})
                                if check3==0 :
                                    data=data =db[dbFlow1].find({'item' : item,'colour' : colour,"state" : 0})
                                    return ["show",data,'‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏°‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤'+item+colour+'‡∏Ç‡∏≠‡∏á'+brand+'‡∏´‡∏≤‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á'+item+colour+'‡∏´‡∏≤‡∏¢']
                                else :
                                    data =db[dbFlow1].find({'item' : item,'colour' : colour ,'brand' : brand,"state" : 0})
                                    return ["show",data,'‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏´‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']
                            else :
                                data =db[dbFlow1].find({'item' : item,'colour' : colour,"state" : 0})
                                return ["show",data,'‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á'+item+colour+'‡∏´‡∏≤‡∏¢ ‡∏ï‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']
                    elif brand !='‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ' and brand !='‡πÑ‡∏°‡πà‡∏°‡∏µ' :
                        check3=db[dbFlow1].count({'item' : item ,'brand' : brand,"state" : 0})
                        if check3==0 :
                            data =db[dbFlow1].find({'item' : item,"state" : 0})
                            return ["show",data,'‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏°‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤'+item+'‡∏Ç‡∏≠‡∏á'+brand+'‡∏´‡∏≤‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á'+item+'‡∏´‡∏≤‡∏¢']
                        else :
                            data=db[dbFlow1].find({'item' : item ,'brand' : brand,"state" : 0})
                            return ["show",data,'‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤'+item+'‡∏´‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']
                    else :
                        data =db[dbFlow1].find({'item' : item,"state" : 0})
                        return ["show",data,"‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á"+item+'‡∏´‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡∏ö']
                    
                        
                
        else :
            print("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ context")

    if intent == 'Flow2- imageurl' :
        return 'ReportYN_yes_Found'
    if intent == 'Flow2-where-yes' :
        da=Find_IDX('flow2-followup',iput,UserId)
        if da[1] :
            item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            if item== '‡πÄ‡∏á‡∏¥‡∏ô' :
                return 'ReportYN_yes_Found'
            else :
                tex=['‡∏ú‡∏°‡∏Ç‡∏≠‡∏£‡∏π‡∏õ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö','‡∏ú‡∏°‡∏Ç‡∏≠‡∏£‡∏π‡∏õ‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö']
                return ['get-image',random.choice(tex)]

    if intent in ['Flow2-where-no'] :
        return ['Finish',2]

    if intent == 'Flow2-colour' :
        da=Find_IDX('flow2-followup',iput,UserId)
        if da[1] :
            colour=iput['queryResult']['outputContexts'][da[0]]['parameters']['colour']
            item=iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            if colour=='‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ' :
                tex=['‡∏≠‡πà‡∏≤ ‡∏á‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö','‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö']
                listItem.append(random.choice(tex))
            else :
                tex=item+colour+'‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö'
                listItem.append(tex)
            tex=['‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö?','‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?']
            listItem.append(random.choice(tex))
            return [-1,listItem]
    
    if intent == 'Flow2-brand' :
        da=Find_IDX('flow2-followup',iput,UserId)
        if da[1] :
            brand=iput['queryResult']['outputContexts'][da[0]]['parameters']['brand']
            item=iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            colour=iput['queryResult']['outputContexts'][da[0]]['parameters']['colour']
            if brand in ['‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ','‡πÑ‡∏°‡πà‡∏°‡∏µ'] :
                tex=['‡∏≠‡πà‡∏≤ ‡∏á‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö','‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö']
                listItem.append(random.choice(tex))
            else :
                tex=item+'‡∏Ç‡∏≠‡∏á'+brand+'‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö'
                listItem.append(tex)
                # listItem.append(tex)
            tex2=['‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô‡∏´‡∏£‡∏≠‡∏Ñ‡∏£‡∏±‡∏ö?','‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö?']
            listItem.append(random.choice(tex2))
            # listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
            return ['Map',listItem]
    
    
    if intent == 'Flow2-tel' :
        da=Find_IDX('flow2-followup',iput,UserId)
        if da[1] :
            item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            Retake =iput['queryResult']['outputContexts'][da[0]]['parameters']['Retake']
            tel =iput['queryResult']['outputContexts'][da[0]]['parameters']['tel']
            CC=checkTel(tel) 
            if type(CC) == list :
                return CC
            x=0
            for i in range(Maxdata) :
                Id=UserId+str(x)
                s=db[dbFlow2].count({"_id" : Id+'2'})
                if s==0 :
                    break
                x+=1
            if x==0 :
                Id=UserId+str(x)
                if item=='‡πÄ‡∏á‡∏¥‡∏ô' :
                    number=iput['queryResult']['outputContexts'][da[0]]['parameters']['number']
                    place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                    db[dbFlow2].insert_one({"_id" : Id+'2',"souce": UserId, "tel" : CC, "place" : place , "number" : number, "retake" : Retake, "state" : 0 ,'item' : item ,'url' : 'coin', 'text' : '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏≤‡∏¢ ' +str(number) +' ‡∏ö‡∏≤‡∏ó'})
                else :
                    url =iput['queryResult']['outputContexts'][da[0]]['parameters']['url']
                    brand=iput['queryResult']['outputContexts'][da[0]]['parameters']['brand']
                    colour=iput['queryResult']['outputContexts'][da[0]]['parameters']['colour']
                    place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                    db[dbFlow2].insert_one({"_id" : Id+'2',"souce": UserId, "tel" : CC, "place" : place , 'brand' :brand ,'colour':colour , "retake" : Retake, "state" : 0 ,'item' : item,'url' : url,  'text' : '‡πÅ‡∏à‡πâ‡∏á' +item +'‡∏´‡∏≤‡∏¢' })
                return ["Finish",1]
            else :
                return "Want_More_infomation?"
        else :
            print("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ context")
    if intent == 'Flow2-tel-yes' :
        da=Find_IDX('flow2-followup',iput,UserId)
        if da[1] :
            item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
            Retake =iput['queryResult']['outputContexts'][da[0]]['parameters']['Retake']
            tel =iput['queryResult']['outputContexts'][da[0]]['parameters']['tel']
            CC=checkTel(tel) 
            x=0
            for i in range(Maxdata) :
                Id=UserId+str(x)
                s=db[dbFlow2].count({"_id" : Id+'2'})
                if s==0 :
                    break
                x+=1
            print("CC :{}".format(CC)) 
            if item=='‡πÄ‡∏á‡∏¥‡∏ô' :
                    number=iput['queryResult']['outputContexts'][da[0]]['parameters']['number']
                    place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                    db[dbFlow2].insert_one({"_id" : Id+'2',"souce": UserId, "tel" : CC, "place" : place , "number" : number, "retake" : Retake, "state" : 0,'item' : item,'url' : 'coin' ,'text' : '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ ' +str(number) +' ‡∏ö‡∏≤‡∏ó'})
            else :
                    url=iput['queryResult']['outputContexts'][da[0]]['parameters']['url']
                    brand=iput['queryResult']['outputContexts'][da[0]]['parameters']['brand']
                    colour=iput['queryResult']['outputContexts'][da[0]]['parameters']['colour']
                    place=iput['queryResult']['outputContexts'][da[0]]['parameters']['place']
                    db[dbFlow2].insert_one({"_id" : Id+'2',"souce": UserId, "tel" : CC, "place" : place , 'brand' :brand ,'colour':colour , "retake" : Retake, "state" : 0 ,'url' : url,'item' : item ,'text' : '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏Å‡πá‡∏ö' +item +'‡πÑ‡∏î‡πâ'})
            return ["Finish",1]
        else :
            print("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ context")

    if intent == 'Flow2-where-yes - no' :
        tex=['‡∏á‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö']
        return [-2,"jpg : <jpg-nophotoo.jpg>",[]]
    

    #////////////////////////////////////////////////////////////////instructive///////////////////////////////////////////////////////////////////////////////////////
    if intent == 'Flow1-how much - no' :
        listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
        da=Find_IDX('lost_item-followup',iput,UserId)
        item = iput['queryResult']['outputContexts'][da[0]]['parameters']['item']
        if item in ['‡πÄ‡∏á‡∏¥‡∏ô'] :
                listItem.append('‡∏õ‡∏Å‡∏ï‡∏¥‡πÑ‡∏î‡πâ‡∏û‡∏Å‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö')
                return [-2,'<in-instructive-money>',listItem]
        elif item in ['‡πÅ‡∏´‡∏ß‡∏ô','‡πÅ‡∏ß‡πà‡∏ô‡∏ï‡∏≤'] :
            tex=['‡∏•‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏î‡∏π‡∏¢‡∏±‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏´‡∏•‡∏á‡πÉ‡∏™‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∂‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡πá‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏ô‡∏∞','‡∏´‡∏•‡∏á‡πÉ‡∏™‡πà‡πÄ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∂‡∏õ‡∏•‡πà‡∏≤‡∏ß‡∏ß ‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏£‡∏á‡∏µ‡πâ']
            listItem.append(random.choice(tex))
            return [-1,listItem]
        else :
            tex=['‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏°‡∏£‡∏∂‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö?','‡∏°‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏•‡∏á‡∏´‡∏¢‡∏¥‡∏ö‡πÑ‡∏õ‡πÑ‡∏°‡πà‡∏ö‡∏≠‡∏Å‡∏£‡∏∂‡πÄ‡∏õ‡∏•‡πà‡∏≤?']
            listItem.append(random,choice(tex))
            return [-2,'<in-instructive-other>',listItem]
        
    if intent in ['instructive-state3-item','lost_item-what i cando'] :
        da=Find_IDX('instructive-state3-item-followup',iput,UserId)
        if da[1] : 
            item=get_param(iput,da,'item')
            listItem.append(iput['queryResult']['fulfillmentMessages'][0]['text']['text'][0])
            if item in ['‡πÄ‡∏á‡∏¥‡∏ô'] :
                # tex=item+'‡∏´‡∏≤‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö'
                listItem.append('‡∏õ‡∏Å‡∏ï‡∏¥‡πÑ‡∏î‡πâ‡∏û‡∏Å‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö')
                return [-2,'<in-instructive-money>',listItem]
            elif item in ['‡πÅ‡∏´‡∏ß‡∏ô','‡πÅ‡∏ß‡πà‡∏ô‡∏ï‡∏≤'] :
                tex=['‡∏•‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏î‡∏π‡∏¢‡∏±‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏´‡∏•‡∏á‡πÉ‡∏™‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∂‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡πá‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏ô‡∏∞','‡∏´‡∏•‡∏á‡πÉ‡∏™‡πà‡πÄ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∂‡∏õ‡∏•‡πà‡∏≤‡∏ß‡∏ß ‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏£‡∏á‡∏µ‡πâ']
                listItem.append(random.choice(tex))
                return [-1,listItem]
            else :
                tex=['‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏°‡∏£‡∏∂‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö?','‡∏°‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏•‡∏á‡∏´‡∏¢‡∏¥‡∏ö‡πÑ‡∏õ‡πÑ‡∏°‡πà‡∏ö‡∏≠‡∏Å‡∏£‡∏∂‡πÄ‡∏õ‡∏•‡πà‡∏≤?']
                listItem.append(random.choice(tex))
                return [-2,'<in-instructive-other>',listItem]
    if intent =='instructive-state8' :
        return ['instructive-state8']
    # if intent == 
    return iput
def disdata(_id) :
    flow=_id[len(_id)-1]
    if flow=='1' :
        data=list(db[dbFlow1].find({"_id" : _id}))
        data=data[0]
        if data['item'] == "‡πÄ‡∏á‡∏¥‡∏ô" :
            tex='‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢ :'+"‡πÄ‡∏á‡∏¥‡∏ô\n"+'‡∏à‡∏≥‡∏ô‡∏ß‡∏ô :'+str(data['number'])+'\n'+'‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà :'+data['place']
            # print('‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢ :'+"‡πÄ‡∏á‡∏¥‡∏ô")
            # print('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô :'+data['number'])
            # print('‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà :'+data['place'])
        else :
            tex='‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢ : '+data['item']+'\n‡∏™‡∏µ : '+data['colour']+'\n‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå : '+data['brand']+'\n'+'‡∏´‡∏≤‡∏¢‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà :'+data['place']
        return tex
    if flow=='2' :
        # print(_id)
        data=list(db[dbFlow2].find({"_id" : _id}))
        data=data[0]
        if data['item'] == "‡πÄ‡∏á‡∏¥‡∏ô" :
            tex='‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ :'+"‡πÄ‡∏á‡∏¥‡∏ô\n"+'‡∏à‡∏≥‡∏ô‡∏ß‡∏ô :'+str(data['number'])+'\n'+'‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà :'+data['place']
            # print('‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ :'+"‡πÄ‡∏á‡∏¥‡∏ô")
            # print('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô :'+data['number'])
            # print('‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà :'+data['place'])
        else :
            tex='‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ : '+data['item']+'\n‡∏™‡∏µ : '+data['colour']+'\n‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå : '+data['brand']+'\n'+'‡πÄ‡∏à‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà :'+data['place']
        return tex


def distel(_id) :
    flow=_id[len(_id)-1]
    print(flow)
    if flow=='1' :
        data=list(db[dbFlow1].find({"_id" : _id}))
        print(_id)
        data=data[0]
        if data['retake'] == 'my' :
            tex='‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á ‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏Å‡∏¥‡∏à\n' + '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° '+ data['tel']
        else :
             tex='‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á ‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ñ‡∏∑‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á\n' + '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°'+ data['tel']
        return tex
    if flow=='2' :
        # print(_id)
        data=list(db[dbFlow2].find({"_id" : _id}))
        data=data[0]
        print("tel2")
        if data['retake'] == 'my' :
            tex='‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á ‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ñ‡∏∑‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏Å‡∏¥‡∏à\n' + '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° '+ data['tel']
        else :
             tex='‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á ‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏£‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á\n' + '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°'+ data['tel']
        return tex

def load_data(_id):
    data=db[dbFlow1].find({"souce" : _id})
    return data

# tex = 'data:asdfpe445'
# texne=''
# x=0
# for i in tex :
#     x+=1
#     if x==len(tex) :
#         break
#     texne+=i
# print(texne)
# coll.insert_one({'_id' : 2 ,'num' : 200})
# db[dbFlow2].update_one({"number":300 ,'place':'‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏≤‡∏™', "state" : 1},{ '$set' :{"state" : 0,'item' : '‡πÄ‡∏á‡∏¥‡∏ô'}})
# db[dbFlow2].insert_one({"tel" : '0804782205', "place" : '‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏≤‡∏™' , "number" : '300', "retake" : '‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á', "state" : 0,'item' : '‡πÄ‡∏á‡∏¥‡∏ô'})
# ID='adsfe581'+'2'
# db[dbFlow2].insert_one({"_id" : 'adsfe5‡∏ü‡∏´‡∏Å‡∏î‡∏≥'+'2',"souce": "UserId", "tel" : '0804782205', "place" : "‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏≤‡∏™" , "number" : 500, "retake" : '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô', "state" : 0 ,'item' : '‡πÄ‡∏á‡∏¥‡∏ô' ,'url' : 'coin','text' : '‡∏°‡∏µ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏≤‡∏¢ ' +'500' +' ‡∏ö‡∏≤‡∏ó'})
# test=db[dbFlow2].find({"_id":"‡πÄadsfe5‡∏ü‡∏´‡∏Å‡∏î‡∏≥2"})